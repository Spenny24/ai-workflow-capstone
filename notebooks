{"cells": [{"cell_type": "markdown", "metadata": {}, "source": ["# EDA \u2014 quick pass\n", "\n", "Load the compiled data and take a first look at date range, countries, and simple aggregates."]}, {"cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": ["import pandas as pd, matplotlib.pyplot as plt\n", "from pathlib import Path\n", "compiled = pd.read_parquet(Path('data/compiled')/'compiled.parquet')\n", "compiled['date'] = pd.to_datetime(compiled['invoice_date']).dt.date\n", "compiled.head()"]}, {"cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": ["span = (compiled['invoice_date'].max() - compiled['invoice_date'].min()).days\n", "countries = compiled['country'].nunique() if 'country' in compiled else 'n/a'\n", "print(f'Date span: {span} days; Countries: {countries}')"]}, {"cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": ["daily = compiled.groupby(['date']).agg(revenue=('revenue','sum'), purchases=('invoice','nunique'), views=('stream_views','sum')).reset_index()\n", "fig, ax = plt.subplots(figsize=(10,4)); ax.plot(pd.to_datetime(daily['date']), daily['revenue']); ax.set_title('Revenue by day'); ax.set_xlabel(''); ax.set_ylabel('Revenue'); plt.tight_layout()"]}], "metadata": {"kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}, "language_info": {"name": "python", "version": "3.x"}}, "nbformat": 4, "nbformat_minor": 5}
